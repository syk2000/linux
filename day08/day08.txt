#하드디스크 2G 1G가 주고 시작한다.
//fdisk /dev/sdb 도 이와 같이 만들어 주면 된다
[root@localhost ~]# fdisk /dev/sdc
Welcome to fdisk (util-linux 2.23.2).

Changes will remain in memory only, until you decide to write them.
Be careful before using the write command.

Device does not contain a recognized partition table
Building a new DOS disklabel with disk identifier 0x1ec709a8.

Command (m for help): n
Partition type:
   p   primary (0 primary, 0 extended, 4 free)
   e   extended
Select (default p): p
Partition number (1-4, default 1): 1
First sector (2048-4194303, default 2048):
Using default value 2048
Last sector, +sectors or +size{K,M,G} (2048-4194303, default 4194303):
Using default value 4194303
Partition 1 of type Linux and of size 2 GiB is set

Command (m for help): t
Selected partition 1
Hex code (type L to list all codes): fd
Changed type of partition 'Linux' to 'Linux raid autodetect'

Command (m for help): p

Disk /dev/sdc: 2147 MB, 2147483648 bytes, 4194304 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk label type: dos
Disk identifier: 0x1ec709a8

   Device Boot      Start         End      Blocks   Id  System
/dev/sdc1            2048     4194303     2096128   fd  Linux raid autodetect

Command (m for help): w
The partition table has been altered!

Calling ioctl() to re-read partition table.
Syncing disks.
------------------
[root@localhost ~]# fdisk -l /dev/sdb /dev/sdc

Disk /dev/sdb: 1073 MB, 1073741824 bytes, 2097152 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk label type: dos
Disk identifier: 0x7d3cfacf

   Device Boot      Start         End      Blocks   Id  System
/dev/sdb1            2048     2097151     1047552   fd  Linux raid autodetect

Disk /dev/sdc: 2147 MB, 2147483648 bytes, 4194304 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk label type: dos
Disk identifier: 0x1ec709a8

   Device Boot      Start         End      Blocks   Id  System
/dev/sdc1            2048     4194303     2096128   fd  Linux raid autodetect

//만들때 사용한다.
[root@localhost ~]# mdadm --creat /dev/md9 --level=linear --raid-devices=2 /dev/sdb1 /dev/sdc1                                                                                                                                               mdadm: Defaulting to version 1.2 metadata
mdadm: array /dev/md9 started.

//만들어 졌는지 확인하는 용도
[root@localhost ~]# mdadm -D -s
ARRAY /dev/md9 metadata=1.2 name=localhost.localdomain:9 UUID=986da447:18d87a86:dbd962d1:985b6d7e

//세부적으로 확인하는 용도
[root@localhost ~]# mdadm --detail /dev/md9
/dev/md9:
           Version : 1.2
     Creation Time : Sun Jan  5 14:50:29 2020
        Raid Level : linear
        Array Size : 3141632 (3.00 GiB 3.22 GB)
      Raid Devices : 2
     Total Devices : 2
       Persistence : Superblock is persistent

       Update Time : Sun Jan  5 14:50:29 2020
             State : clean
    Active Devices : 2
   Working Devices : 2
    Failed Devices : 0
     Spare Devices : 0

          Rounding : 0K

Consistency Policy : none

              Name : localhost.localdomain:9  (local to host localhost.localdomain)
              UUID : 986da447:18d87a86:dbd962d1:985b6d7e
            Events : 0

    Number   Major   Minor   RaidDevice State
       0       8       17        0      active sync   /dev/sdb1
       1       8       33        1      active sync   /dev/sdc1


//포맷하는 것 ***done이 4개가 나와야 한다
[root@localhost ~]# mkfs.ext4 /dev/md9

//dir 이름은 다른 것 해도 상관이 없다
[root@localhost ~]# mkdir /linearraid
[root@localhost ~]# mount /dev/md9 /linearraid

[root@localhost ~]# df -Th


vi /etc/fstab에 들어가서 
[root@localhost ~]# vi /etc/fstab

/dev/md9        /linearraid     ext4    defaults        0 0 //입력을 해줘야 한다.

[root@localhost ~]# mount -a

[root@localhost ~]# mdadm -D -s
ARRAY /dev/md9 metadata=1.2 name=localhost.localdomain:9 UUID=986da447:18d87a86:dbd962d1:985b6d7e

		//이파일을	이파일로 덮어써서 정보를 넣어줘
[root@localhost ~]# mdadm -D -s > /etc/mdadm.conf

[root@localhost ~]# mdadm -D /dev/md9
/dev/md9:
           Version : 1.2
     Creation Time : Sun Jan  5 14:50:29 2020
        Raid Level : linear
        Array Size : 3141632 (3.00 GiB 3.22 GB)
      Raid Devices : 2
     Total Devices : 2
       Persistence : Superblock is persistent

       Update Time : Sun Jan  5 14:50:29 2020
             State : clean
    Active Devices : 2
   Working Devices : 2
    Failed Devices : 0
     Spare Devices : 0

          Rounding : 0K

Consistency Policy : none

              Name : localhost.localdomain:9  (local to host localhost.localdoma                                                                                                                                                             in)
              UUID : 986da447:18d87a86:dbd962d1:985b6d7e
            Events : 0

    Number   Major   Minor   RaidDevice State
       0       8       17        0      active sync   /dev/sdb1
       1       8       33        1      active sync   /dev/sdc1


========================RAID 제거==============================
			//지우는 것이 상당히 까다롭다				

[root@localhost ~]# umount /dev/md9

[root@localhost ~]# mdadm --stop /dev/md9
mdadm: stopped /dev/md9

[root@localhost ~]# mdadm -A /dev/md9
mdadm: /dev/md9 has been started with 2 drives.
[root@localhost ~]# mdadm --stop /dev/md9
mdadm: stopped /dev/md9
[root@localhost ~]# mdadm --remove /dev/md9
mdadm: error opening /dev/md9: No such file or directory

[root@localhost ~]# mdadm --zero-superblock /dev/sdb1 /dev/sdc1

[root@localhost ~]# fdisk /dev/sdb //파티션을 지우겠다. sdc도 이와같이 지워야 한다.
Welcome to fdisk (util-linux 2.23.2).

Changes will remain in memory only, until you decide to write them.
Be careful before using the write command.


Command (m for help): d
Selected partition 1
Partition 1 is deleted

Command (m for help): p

Disk /dev/sdb: 1073 MB, 1073741824 bytes, 2097152 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk label type: dos
Disk identifier: 0x7d3cfacf

   Device Boot      Start         End      Blocks   Id  System

Command (m for help): w
The partition table has been altered!

Calling ioctl() to re-read partition table.
Syncing disks.

vi /etc/fstab에서 적어줬던 것도 지우고 저장을 한다.

==============================================================
//두개의 하드디스크 각 20G씩 만들어 준다. 그리고 sdc,sdb로 만들고 아래와 같이 만들어 준다.

[root@localhost ~]# fdisk /dev/sdc
Welcome to fdisk (util-linux 2.23.2).

Changes will remain in memory only, until you decide to write them.
Be careful before using the write command.

Device does not contain a recognized partition table
Building a new DOS disklabel with disk identifier 0x773fba47.

Command (m for help): n
Partition type:
   p   primary (0 primary, 0 extended, 4 free)
   e   extended
Select (default p): p
Partition number (1-4, default 1): 1
First sector (2048-41943039, default 2048):
Using default value 2048
Last sector, +sectors or +size{K,M,G} (2048-41943039, default 41943039):
Using default value 41943039
Partition 1 of type Linux and of size 20 GiB is set

Command (m for help): t
Selected partition 1
Hex code (type L to list all codes): fd
Changed type of partition 'Linux' to 'Linux raid autodetect'

Command (m for help): p

Disk /dev/sdc: 21.5 GB, 21474836480 bytes, 41943040 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk label type: dos
Disk identifier: 0x773fba47

   Device Boot      Start         End      Blocks   Id  System
/dev/sdc1            2048    41943039    20970496   fd  Linux raid autodetect

Command (m for help): w
The partition table has been altered!

Calling ioctl() to re-read partition table.
Syncing disks.
			//md0이라는 RAID는 0번 HD는 2개이고 각각의 이름이야.
[root@localhost ~]# mdadm -C /dev/md0 -l 0 -n 2 /dev/sdb1 /dev/sdc1
mdadm: Defaulting to version 1.2 metadata
mdadm: array /dev/md0 started.

//세부적인 것을 확인
[root@localhost ~]# mdadm -D -s
ARRAY /dev/md0 metadata=1.2 name=localhost.localdomain:0 UUID=b8c469be:697b65b6:c784b581:465b47de

//포멧 done 4개 뜨면 성공
[root@localhost ~]# mkfs.ext4 /dev/md0

//mount포인트 만들어서 mount하기
[root@localhost ~]# mkdir /raid0
[root@localhost ~]# mount /dev/md0 /raid0
[root@localhost ~]# df -Th


[root@localhost ~]# vi /etc/fstab  //vi 편집기로 들어가서 설정하고 저장 후 나가기
/dev/md0        /raid0  ext4    defaults        0 0

[root@localhost ~]# mount -a
[root@localhost ~]# mdadm -D -s /dev/md0 > /etc/mdadm.conf
[root@localhost ~]# cat /etc/mdadm.conf
ARRAY /dev/md0 metadata=1.2 name=localhost.localdomain:0 UUID=b8c469be:697b65b6:c784b581:465b47de

==============================================================
RAID 5단계 만들기 HD 3개 만들기

파티션 설정하기 3개 만들어야한다.

[root@localhost ~]# mdadm -C /dev/md5 -l 5 -n 3 /dev/sdb1 /dev/sdc1 /dev/sdd1
mdadm: Defaulting to version 1.2 metadata
mdadm: array /dev/md5 started.

[root@localhost ~]# mdadm -D -s /dev/md5
ARRAY /dev/md5 metadata=1.2 name=localhost.localdomain:5 UUID=c93def1f:c420ab17:bc959b04:9bb62b31

[root@localhost ~]# mkfs.ext4 /dev/md5

[root@localhost ~]# mkdir /raid5
[root@localhost ~]# mount /dev/md5 /raid5
[root@localhost ~]# df -Th


[root@localhost ~]# vi /etc/fstab

/dev/md5        /raid5  ext4    defaults        0 0


[root@localhost ~]# mdadm -D -s /dev/md5 > /etc/mdadm.conf
[root@localhost ~]# ls -l /etc/mdadm.*
-rw-r--r--. 1 root root 98  1월  5 15:42 /etc/mdadm.conf

==========================링크 파일============================
[root@localhost ~]# ls -al /dev/sda?
brw-rw----. 1 root disk 8, 1 12월 15 15:01 /dev/sda1
brw-rw----. 1 root disk 8, 2 12월 15 15:01 /dev/sda2

drwxr-xr-x = inode 파일에서 가지고 온 것이다.

[root@localhost ~]# cd /home/kgitbank/
[root@localhost kgitbank]# touch file1
[root@localhost kgitbank]# cat > file1
welcome to my class
this is hard link file
bye bye

[root@localhost kgitbank]# stat file1
  File: `file1'
  Size: 51              Blocks: 8          IO Block: 4096   일반 파일
Device: fd00h/64768d    Inode: 17534951    Links: 1		//Links = Hard_Link
Access: (0644/-rw-r--r--)  Uid: (    0/    root)   Gid: (    0/    root)
Context: unconfined_u:object_r:user_home_t:s0
Access: 2020-01-05 16:25:09.526264290 +0900
Modify: 2020-01-05 16:25:39.260629960 +0900
Change: 2020-01-05 16:25:39.260629960 +0900
 Birth: -

70%는 거의 완전히 file1을 복사한 것과 다름이 없다.
[root@localhost kgitbank]# ln file1 H_file 	//hard_file 만들기
[root@localhost kgitbank]# ls -il
합계 8
17534951 -rw-r--r--. 2 root root 51  1월  5 16:25 H_file
17534951 -rw-r--r--. 2 root root 51  1월  5 16:25 file1

[root@localhost kgitbank]# stat file1
  File: `file1'
  Size: 51              Blocks: 8          IO Block: 4096   일반 파일
Device: fd00h/64768d    Inode: 17534951    Links: 2
Access: (0644/-rw-r--r--)  Uid: (    0/    root)   Gid: (    0/    root)
Context: unconfined_u:object_r:user_home_t:s0
Access: 2020-01-05 16:25:09.526264290 +0900
Modify: 2020-01-05 16:25:39.260629960 +0900
Change: 2020-01-05 16:27:22.998905715 +0900
 Birth: -

//원본 file1번을 지워 보기
[root@localhost kgitbank]# ll
합계 8
-rw-r--r--. 2 root root 51  1월  5 16:25 H_file
-rw-r--r--. 2 root root 51  1월  5 16:25 file1
[root@localhost kgitbank]# rm -rf file1
[root@localhost kgitbank]# ll
합계 4
-rw-r--r--. 1 root root 51  1월  5 16:25 H_file

[root@localhost kgitbank]# cat H_file
welcome to my class
this is hard link file
bye bye
[root@localhost kgitbank]# stat H_file
  File: `H_file'
  Size: 51              Blocks: 8          IO Block: 4096   일반 파일
Device: fd00h/64768d    Inode: 17534951    Links: 1
Access: (0644/-rw-r--r--)  Uid: (    0/    root)   Gid: (    0/    root)
Context: unconfined_u:object_r:user_home_t:s0
Access: 2020-01-05 16:29:51.720735545 +0900
Modify: 2020-01-05 16:25:39.260629960 +0900
Change: 2020-01-05 16:29:20.620352816 +0900
 Birth: -

[root@localhost kgitbank]# cat > file2
good boy
welcome to my class
this is sumbolic link file
good bye

[root@localhost kgitbank]# stat file2
  File: `file2'
  Size: 65              Blocks: 8          IO Block: 4096   일반 파일
Device: fd00h/64768d    Inode: 17534959    Links: 1
Access: (0644/-rw-r--r--)  Uid: (    0/    root)   Gid: (    0/    root)
Context: unconfined_u:object_r:user_home_t:s0
Access: 2020-01-05 16:30:24.234135665 +0900
Modify: 2020-01-05 16:30:42.193356683 +0900
Change: 2020-01-05 16:30:42.193356683 +0900
 Birth: -
[root@localhost kgitbank]# ln -s file2 s_file2

[root@localhost kgitbank]# stat file2
  File: `file2'
  Size: 65              Blocks: 8          IO Block: 4096   일반 파일
Device: fd00h/64768d    Inode: 17534959    Links: 1		

//sumbolic을 사용하니까 Links 개수가 1개이다.

Access: (0644/-rw-r--r--)  Uid: (    0/    root)   Gid: (    0/    root)
Context: unconfined_u:object_r:user_home_t:s0
Access: 2020-01-05 16:30:24.234135665 +0900
Modify: 2020-01-05 16:30:42.193356683 +0900
Change: 2020-01-05 16:30:42.193356683 +0900
 Birth: -

//리스트 목록을 보면 이렇게 나온다.
[root@localhost kgitbank]# ll
합계 8
-rw-r--r--. 1 root root 51  1월  5 16:25 H_file
-rw-r--r--. 1 root root 65  1월  5 16:30 file2
lrwxrwxrwx. 1 root root  5  1월  5 16:31 s_file2 -> file2

Link개수가 안늘어나는 이유:
//주소가 다르다는 것을 알 수가 있다.
[root@localhost kgitbank]# ls -il
합계 8
17534951 -rw-r--r--. 1 root root 51  1월  5 16:25 H_file
17534959 -rw-r--r--. 1 root root 65  1월  5 16:30 file2
17534967 lrwxrwxrwx. 1 root root  5  1월  5 16:31 s_file2 -> file2


//파일 내용은 똑같다는 것을 알 수가 있다.
[root@localhost kgitbank]# cat s_file2
good boy
welcome to my class
this is sumbolic link file
good bye

[root@localhost kgitbank]# rm -rf file2
[root@localhost kgitbank]# ll
합계 4
-rw-r--r--. 1 root root 51  1월  5 16:25 H_file
lrwxrwxrwx. 1 root root  5  1월  5 16:31 s_file2 -> file2 //빨간색으로 표시가 된다.

//즉 symbolic 개념은 바로가기 개념으로 알 수가 있다.

[root@localhost kgitbank]# cat > file2
wymbolic link file
hi
goodbye
[root@localhost kgitbank]# ll
합계 8
-rw-r--r--. 1 root root 51  1월  5 16:25 H_file
-rw-r--r--. 1 root root 30  1월  5 16:38 file2
lrwxrwxrwx. 1 root root  5  1월  5 16:31 s_file2 -> file2
[root@localhost kgitbank]# cat s_file2
wymbolic link file
hi
goodbye

=============================PROCESS===========================
//프로세스 돌아가는 것을 보여준다.
[root@localhost kgitbank]# top

[root@localhost kgitbank]# uname -r //버전
3.10.0-957.el7.x86_64

[root@localhost kgitbank]# cat /proc/meminfo  | more //메모리 정보

[root@localhost kgitbank]# cat /proc/cpuinfo //cpu 정보

[root@localhost kgitbank]# cd /proc/

[root@localhost proc]# cat mounts |tail -7

===============================YUM============================
리눅스 작업할 때 yum을 많이 사용한다. 
인터넷에서 받아오는 것

[root@localhost proc]# yum -y install gcc
[root@localhost proc]# yum info gcc      //설치한 파일에 관련된 정보


[root@localhost proc]# cat /var/log/yum.log //언제 설치 되어있는지 나온다.

[root@localhost proc]# cd /etc/yum.repos.d/
[root@localhost yum.repos.d]# ll
합계 32

[root@localhost yum.repos.d]# yum -y remove gcc


//CD룸 가리키기(rpm은 cd룸으로 설치하고 yum은 인터넷으로 설치했다.)
[root@localhost ~]# mkdir /cdrom
[root@localhost ~]# mount /dev/cdrom /cdrom
mount: no medium found on /dev/sr0


[root@localhost Packages]# rpm telnet-server-0.17-64.el7.x86_64.rpm

[root@localhost Packages]# rpm -qa |grep telnet-server

[root@localhost Packages]# rpm -qa |grep ssh

[root@localhost Packages]# cd /etc/yum.repos.d
[root@localhost yum.repos.d]# ll

[root@localhost yum.repos.d]# mkdir backup

[root@localhost yum.repos.d]# mv *.repo backup/

[root@localhost yum.repos.d]# ll //백업파일 만들기
합계 0
drwxr-xr-x. 2 root root 187  1월  5 18:17 backup

[root@localhost yum.repos.d]# touch cdrom.repo


//vi편집기에 들어가서 이렇게 쳐준다.
[root@localhost yum.repos.d]# vi cdrom.repo 
[cdrom]
name=CentOs cdrom
baseurl=file:///cdrom
gpgcheck=0

[root@localhost yum.repos.d]# yum install mysql-connector-odbc //다운 받기
yes or no를 명령어에 미리 지정하지 않았기 때문에 설치하다가 물어본다.

//만약 위의 설치파일이 안될때 다시 vi 편집기에 들어가서 이것을 추가로 친다.
[root@localhost yum.repos.d]# vi cdrom.repo 

[network]
       name=Network
       baseurl=
               http://mirrors.kernel.org/centos/7os/x86_64/
              http://mirrors.edge.kernel.org/centos/7/os/x86_64/
      gpgcheck=0

//재설치 하기위해 삭제하는 것이다.
[root@localhost yum.repos.d]# yum -y remove mysql-connector-odbc unixODBC

//네트워크를 통해 설치를 했다.
[root@localhost yum.repos.d]# yum install mysql-connector-odbc html12ps

===========================압축 및 해제===========================
//압축할 때

[root@localhost kgitbank]# touch 1 2 3
[root@localhost kgitbank]# gzip 1
[root@localhost kgitbank]# gzip 2
[root@localhost kgitbank]# gzip 3
[root@localhost kgitbank]# ll
합계 12
-rw-r--r--. 1 root root 22  1월  5 18:39 1.gz
-rw-r--r--. 1 root root 22  1월  5 18:39 2.gz
-rw-r--r--. 1 root root 22  1월  5 18:39 3.gz

//압축을 풀 때
[root@localhost kgitbank]# gunzip 1.gz
[root@localhost kgitbank]# gunzip 2.gz
[root@localhost kgitbank]# gunzip 3.gz
[root@localhost kgitbank]# ll
합계 0
-rw-r--r--. 1 root root 0  1월  5 18:39 1
-rw-r--r--. 1 root root 0  1월  5 18:39 2
-rw-r--r--. 1 root root 0  1월  5 18:39 3

------------------------------------------------------------------------------------------------
압축할때
[root@localhost kgitbank]# bzip2 1
[root@localhost kgitbank]# bzip2 2
[root@localhost kgitbank]# bzip2 3
[root@localhost kgitbank]# ll
합계 12
-rw-r--r--. 1 root root 14  1월  5 18:39 1.bz2
-rw-r--r--. 1 root root 14  1월  5 18:39 2.bz2
-rw-r--r--. 1 root root 14  1월  5 18:39 3.bz2

//압출 풀때
[root@localhost kgitbank]# bunzip2 1.bz2
[root@localhost kgitbank]# bunzip2 2.bz2
[root@localhost kgitbank]# bunzip2 3.bz2
[root@localhost kgitbank]# ll
합계 0
-rw-r--r--. 1 root root 0  1월  5 18:39 1
-rw-r--r--. 1 root root 0  1월  5 18:39 2
-rw-r--r--. 1 root root 0  1월  5 18:39 3

-------------------------------------------------------------------------------------------------
tar= 압축파일하는 것이아니라 묶는 것이고 묶어주고 압축을 하는 것이다.
//123.tar=파일 묶음집
			
[root@localhost kgitbank]# tar cvf 123.tar 1 2 3

1
2
3

[root@localhost kgitbank]# ll
합계 12
-rw-r--r--. 1 root root     0  1월  5 18:39 1
-rw-r--r--. 1 root root 10240  1월  5 18:48 123.tar
-rw-r--r--. 1 root root     0  1월  5 18:39 2
-rw-r--r--. 1 root root     0  1월  5 18:39 3

//tar만 남기기
[root@localhost kgitbank]# rm -rf 1 2 3

//모음집 암축하기
[root@localhost kgitbank]# gzip 123.tar
[root@localhost kgitbank]# ll
합계 4
-rw-r--r--. 1 root root 131  1월  5 18:48 123.tar.gz
//파일 1,2,3으로 압축 풀기
[root@localhost kgitbank]# tar xvf 123.tar

[root@localhost kgitbank]# tar cvf xinetd.tar /etc/xinetd.d
tar: Removing leading `/' from member names
/etc/xinetd.d/
[root@localhost kgitbank]# ll
합계 12
-rw-r--r--. 1 root root 10240  1월  5 18:53 xinetd.tar
[root@localhost kgitbank]# tar cvfz xinetd.tar.gz /etc/xinetd.d
tar: Removing leading `/' from member names
/etc/xinetd.d/
[root@localhost kgitbank]# ll
합계 16
-rw-r--r--. 1 root root 10240  1월  5 18:53 xinetd.tar
-rw-r--r--. 1 root root   118  1월  5 18:54 xinetd.tar.gz

[root@localhost kgitbank]# tar cvfj xinetd.tar.bz2 /etc/xinetd.d/
tar: Removing leading `/' from member names
/etc/xinetd.d/
[root@localhost kgitbank]# ll
합계 12
-rw-r--r--. 1 root root 118  1월  5 18:54 xinetd.tar
-rw-r--r--. 1 root root 118  1월  5 18:55 xinetd.tar.bz2
-rw-r--r--. 1 root root 118  1월  5 18:54 xinetd.tar.gz
[root@localhost kgitbank]# tar xvfz xinetd.tar.gz
etc/xinetd.d/
[root@localhost kgitbank]# ll
합계 12
drwxr-xr-x. 3 root root  22  1월  5 18:56 etc
-rw-r--r--. 1 root root 118  1월  5 18:54 xinetd.tar
-rw-r--r--. 1 root root 118  1월  5 18:55 xinetd.tar.bz2
-rw-r--r--. 1 root root 118  1월  5 18:54 xinetd.tar.gz

//경로 지정해서 파일 풀기
[root@localhost kgitbank]# tar xvf xinetd.tar -c /home/kgitbank/test /etc/xinetd.d/

================================백업===========================
//백업할 파일
[root@localhost /]# mkdir /backup

[root@localhost /]# dd if=/dev/zero of=/home/kgitbank/full_f bs=1M count=1
1+0 records in
1+0 records out
1048576 bytes (1.0 MB) copied, 0.00166908 s, 628 MB/s
[root@localhost /]# tar zxfp /backup/kgitbank_backup_full. tgz -g /backup/kgitbank_backup /home/kgitbank
[root@localhost /]# dd if=/dev/zero of=/home/kgitbank/first_f bs=1M count=1         
1+0 records in
1+0 records out
1048576 bytes (1.0 MB) copied, 0.00080727 s, 1.3 GB/s
[root@localhost /]# ls /backup/
kgitbank_backup  kgitbank_backup_full.

[root@localhost /]# dd if=/dev/zero of=/home/kgitbank/second_f bs=1M count=1
1+0 records in
1+0 records out
1048576 bytes (1.0 MB) copied, 0.000812559 s, 1.3 GB/s

[root@localhost /]# tar zcfp /backup/kgitbank_backup_2.tgz-g /backup/kgitbank_backup /home/kgitbank/

[root@localhost /]# ls /backup/
//백업하는 파일이 계속 쌓이게 된다
kgitbank_backup  kgitbank_backup_2.tgz-g  kgitbank_backup_full.

//실수 했을 때
[root@localhost /]# rm -rf /home/kgitbank/

//root를 시작으로 백업을 이용해 설치한다.
[root@localhost /]# tar zxf /backup/kgitbank_backup_full.tgz -c /

[root@localhost /]# tar zxf /backup/kgitbank_backup_2.tgz -g /backup/kgitbank_backup -c /
[root@localhost /]# ls -l /home/kgitbank/








